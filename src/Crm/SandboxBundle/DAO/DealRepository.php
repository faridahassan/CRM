<?php

namespace Crm\SandboxBundle\DAO;

/**
 * DealRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DealRepository extends \Doctrine\ORM\EntityRepository
{
	public function getUserOrAllDealsAndOrderByDate($id = 0)
	{

		$qb = $this->getEntityManager()->createQueryBuilder();
		$query;
		if($id) {
			$query = $qb->select('d')
						->from('CrmSandboxBundle:Deal', 'd')
						->where('d.user = ?1')
						->orderBy('d.date', 'DESC')
						->setParameter(1, $id)
						->getQuery();
		}
		else {
			$query = $qb->select('d')
						->from('CrmSandboxBundle:Deal', 'd')
						->orderBy('d.date', 'DESC')
						->getQuery();	
		}

		return $query->getResult();

	}
	public function getCaseByOrigin($beginDate,$endDate)
	{
		$query = $this->getEntityManager()->createQuery(
			'SELECT   ch.type as channelname, count(d) as dealcount
			 from CrmSandboxBundle:Deal d 
			 join d.lead l
			 join l.contact con 
			 join l.subChannel sc
			 join sc.channel ch 
			 where d.closed = true
			 and d.closedDate between :begin and :end
			 group by ch
			 
			'
			)
			->setParameter('begin', $beginDate, \Doctrine\DBAL\Types\Type::DATETIME)
			->setParameter('end', $endDate, \Doctrine\DBAL\Types\Type::DATETIME);
		$dealsCount= $query->getResult();
		$result['dealsCount'] = $dealsCount;
		$result['deals'] = $this->getClosedCases($beginDate,$endDate);
		return $result;
		
		
	}
	public function getClosedCases($beginDate,$endDate)
	{
		$query = $this->getEntityManager()->createQuery(
			'SELECT  d, l,sc, con
			 from CrmSandboxBundle:Deal d 
			 join d.lead l
			 join l.contact con
			 join l.subChannel sc
			 join sc.channel ch 
			 where d.closed = true
			 and d.closedDate between :begin and :end
			'
			)
			->setParameter('begin', $beginDate, \Doctrine\DBAL\Types\Type::DATETIME)
			->setParameter('end', $endDate, \Doctrine\DBAL\Types\Type::DATETIME);
			
		return ($query->getResult());
		
	}
	public function getDealsByDate($beginning, $ending, $id, $type)
	{
		if($type){
			if ($id){
				$query = $this->getEntityManager()->createQuery(
				'SELECT d
				FROM CrmSandboxBundle:Deal d
				JOIN d.user as u
				WHERE (d.date BETWEEN :beginning AND :ending)
				AND u.team = :team
				'
				)
			    ->setParameter('beginning', $beginning, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('ending', $ending, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('team', $id)
			    ;
			}
			else {
				$query = $this->getEntityManager()->createQuery(
					'SELECT d
					FROM CrmSandboxBundle:Deal d
					WHERE d.date BETWEEN :beginning AND :ending')
				    ->setParameter('beginning', $beginning, \Doctrine\DBAL\Types\Type::DATETIME)
				    ->setParameter('ending', $ending, \Doctrine\DBAL\Types\Type::DATETIME);
			}
		}
		else 
		{
			$query = $this->getEntityManager()->createQuery(
				'SELECT d
				FROM CrmSandboxBundle:Deal d
				JOIN d.user as u
				WHERE (d.date BETWEEN :beginning AND :ending)
				AND u = :user
				'
				)
			    ->setParameter('beginning', $beginning, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('ending', $ending, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('user', $id)
			    ;
		}

		return $query->getResult();
	}

	public function getDashboardDeals($beginning, $ending, $id, $type)
	{
		// Team
		if ($type){
			// Specific team
			if ($id) {
				$query = $this->getEntityManager()->createQuery(
				'SELECT d, u
				FROM CrmSandboxBundle:Deal d
				JOIN d.team as t
				JOIN d.user as u
				WHERE (d.date BETWEEN :beginning AND :ending)
				AND d.team = :team
				'
				)
			    ->setParameter('beginning', $beginning, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('ending', $ending, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('team', $id)
			    ;
			}
			// All teams 
			else {
				$query = $this->getEntityManager()->createQuery(
				'SELECT d, t
				FROM CrmSandboxBundle:Deal d
				JOIN d.user as u
				JOIN d.team as t
				WHERE (d.date BETWEEN :beginning AND :ending)
				AND d.team IS NOT NULL
				'
				)
			    ->setParameter('beginning', $beginning, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('ending', $ending, \Doctrine\DBAL\Types\Type::DATETIME)
			    ;
			}

		}
		// Sales reps, now check if all or specific
		else {
			$query = $this->getEntityManager()->createQuery(
				'SELECT d, u
				FROM CrmSandboxBundle:Deal d
				JOIN d.user as u
				WHERE d.date BETWEEN :beginning AND :ending
				AND d.user = :salesrep
				')
			    ->setParameter('beginning', $beginning, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('ending', $ending, \Doctrine\DBAL\Types\Type::DATETIME)
			    ->setParameter('salesrep', $id);
		}
		return $query->getResult();
	}
}
